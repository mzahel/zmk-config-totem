#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <190>;
    require-prior-idle-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        SZ {
            bindings = <&kp RA(S)>;
            key-positions = <11 12>;
            timeout-ms = <25>;
            layers = <0>;
        };

        UE {
            bindings = <&kp RA(Y)>;
            key-positions = <7 8>;
            timeout-ms = <25>;
            layers = <0>;
        };

        AE {
            bindings = <&kp RA(Q)>;
            key-positions = <17 18>;
            timeout-ms = <25>;
            layers = <0>;
        };

        OE {
            bindings = <&kp RA(P)>;
            key-positions = <8 17>;
            timeout-ms = <25>;
            layers = <0>;
        };

        Slash {
            bindings = <&kp FSLH>;
            key-positions = <28 18>;
            timeout-ms = <25>;
            layers = <0>;
        };

        Semi {
            bindings = <&kp SEMI>;
            key-positions = <28 29>;
            timeout-ms = <25>;
            layers = <0>;
        };
    };

    behaviors {
        mt_hp: mt_hp {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HoldPreferred";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <150>;
        };

        mt_arrowfy: mt_arrowfy {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_ARROW";
            bindings = <&arrowfy>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        lowU: lowU {
            compatible = "zmk,behavior-mod-morph";
            label = "LOWU";
            bindings = <&kp U>, <&kp U>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lowX: lowX {
            compatible = "zmk,behavior-mod-morph";
            label = "LOWX";
            bindings = <&kp X>, <&kp X>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lowC: lowC {
            compatible = "zmk,behavior-mod-morph";
            label = "LOWC";
            bindings = <&kp C>, <&kp C>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        lowH: lowH {
            compatible = "zmk,behavior-mod-morph";
            label = "LOWH";
            bindings = <&kp H>, <&kp H>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        arrowfy: arrowfy {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp GT>;
            label = "ARROWFY";
        };

        Qu: Qu {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &lowU>;
            label = "QU";
        };

        Ex: Ex {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &lowX>;
            label = "EX";
        };

        Sch: Sch {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &lowC &lowH>;
            label = "SCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        apt {
            bindings = <
        &kp W   &kp G  &kp D               &kp F           &kp B                 &kp J        &kp L               &kp U               &kp O     &kp Y
        &kp R   &kp S  &mt LEFT_CONTROL T  &mt LEFT_ALT H  &kp K                 &kp Z        &mt LEFT_ALT N      &mt LEFT_CONTROL E  &kp A     &kp I
&trans  &trans  &kp C  &kp M               &mt LEFT_GUI P  &trans                &trans       &mt LEFT_GUI COMMA  &kp DOT             &kp APOS  &trans  &trans
                       &trans              &lt 2 V         &mt_hp LSHIFT BSPC    &lt 3 SPACE  &sl 1               &trans
            >;
        };

        apt_2 {
            bindings = <
        &trans  &trans  &trans  &trans     &trans                &trans  &trans  &trans  &trans  &trans
        &Ex E   &kp X   &kp AT  &kp EXCL   &trans                &trans  &Qu Q   &kp Q   &trans  &trans
&trans  &trans  &Sch S  &trans  &trans     &trans                &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LS(V)  &mt_hp LSHFT SPACE    &trans  &mo 4   &trans
            >;
        };

        sym {
            bindings = <
        &mt CARET DOLLAR  &mt PRCNT HASH   &mt BSLH PIPE  &kp AMPS  &kp STAR    &kp UNDER  &kp N7    &kp N8    &kp N9    &mt_arrowfy EQUAL EQUAL
        &kp N0            &kp N3           &kp N2         &kp N1    &kp LBKT    &kp RBKT   &kp N4    &kp N5    &kp N6    &mt_arrowfy MINUS MINUS
&trans  &trans            &mt TILDE GRAVE  &kp LPAR       &kp RPAR  &trans      &trans     &kp RBRC  &kp LBRC  &kp PLUS  &trans                   &trans
                                           &to 5          &trans    &trans      &trans     &trans    &trans
            >;
        };

        nav {
            bindings = <
        &trans   &trans     &trans            &trans             &trans       &trans     &kp HOME   &kp END   &trans  &kp DEL
        &kp ESC  &kp TAB    &kp LEFT_CONTROL  &mt_hp LALT ENTER  &kp PG_DN    &kp PG_UP  &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT
&trans  &trans   &kp LC(C)  &kp LC(X)         &kp LEFT_GUI       &kp LC(V)    &trans     &kp K_APP  &trans    &trans  &trans     &trans
                            &trans            &trans             &trans       &trans     &trans     &trans
            >;
        };

        fun {
            bindings = <
        &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP         &trans           &trans    &trans  &trans           &kp PRINTSCREEN  &kp F11  &kp F12
        &kp F1      &kp F2        &mt LEFT_CONTROL F3  &mt LEFT_ALT F4  &trans    &trans  &mt LEFT_ALT F7  &mt LCTRL F8     &kp F9   &kp F10
&trans  &trans      &trans        &trans               &mt LGUI F5      &trans    &trans  &mt RGUI F6      &trans           &trans   &trans   &trans
                                  &trans               &trans           &trans    &trans  &trans           &trans
            >;
        };

        gam_1 {
            bindings = <
       &kp X       &kp Q  &kp T  &kp E  &kp R        &trans  &trans  &trans  &trans  &trans
       &kp LCTRL   &kp A  &kp W  &kp D  &kp G        &trans  &trans  &trans  &trans  &trans
&kp Z  &kp LSHIFT  &kp C  &kp S  &kp F  &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                          &mo 7  &mo 6  &kp SPACE    &trans  &trans  &trans
            >;
        };

        gam_2 {
            bindings = <
         &kp N1    &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans
         &kp TAB   &trans  &trans  &trans  &kp M     &trans  &trans  &trans  &trans  &trans
&kp ESC  &kp LALT  &kp Y   &trans  &kp H   &kp B     &trans  &trans  &trans  &trans  &trans  &trans
                           &to 0   &trans  &trans    &trans  &trans  &trans
            >;
        };

        gam_3 {
            bindings = <
        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &trans  &trans  &trans  &trans
        &kp I   &trans  &trans  &trans  &kp J     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
